#!/bin/bash

buildref=$1
shift
[ -n "$buildref" ] || { echo requires a branch/buildref; exit 1; }

DEFINES=
[[ " $* " == *\ release\ * ]] && DEFINES=(--define 'bundle release' --define 'bitrock_build 1')
ODEFINES="${DEFINES[@]}"

buildtype=${1:-both}
shift

# must set before including build-functions.sh
[ $buildtype = platform ] && pkg_name=zmanda-platforms

BUILDVER="4.0"
git --git-dir=.git/modules/tools-archives \
   ls-files stack-output/php | grep -q . &&
   unset BUILDVER

# set the var buildpkg_dir as well
. ./packaging/common_z/build_functions.sh
# DO NOT SET THE TOP VERSION FILES USING set_zmanda_version

# DO NOT SET PKG_DIR FROM TOP DIR
mach=`uname -m`

do_rpm_package() {
    gen_pkg_build_config $buildpkg_dir
    # take the spec/spec.src files and make a tarfile
    gen_repo_pkg_environ $repo_name $buildref
    [ -s rpmbuild/SOURCES/${PKG_NAME_VER}.tar.gz ] || {
            echo >&2 "missing rpmbuild/SOURCES/${PKG_NAME_VER}.tar.gz file version=$PKG_NAME_VER in ${PWD}"
            exit 1
          }
    do_package "$@"
}

generate_override_version() {
       local ref=HEAD
       (
        unset CDPATH
        unset PKG_DIR \
              src_root \
              pkg_suffix \
              pkgconf_dir \
              buildpkg_dir \
              pkg_bldroot \
              pkg_name_pkgtime \
              pkgdirs_top;

        cd ./000-external/tools-archives;

        git rev-parse --verify --quiet __orig_platform >/dev/null && 
             ref=__orig_platform
        echo '#---------------------------------------' buildpkg.repo
        bash ../../packaging/common_z/version_setup.sh $ref
        echo '#---------------------------------------' buildpkg.repo end
       )
}

reset_set_zmanda_version() {
        unset set_zmanda_version
        set_zmanda_version() {
            echo '#---------------------------------------' buildpkg.repo
            eval "$(get_version_evalstr "$1")"
            eval "$OVERRIDE_VERSION"
            declare -g PKG_NAME_VER="$pkg_name-${VERSION}"
            echo -n "$VERSION" > $src_root/FULL_VERSION
            echo -n "$BUILD_VERSION" > $src_root/BUILD_VERSION
            echo -n "$LONG_BRANCH" > $src_root/LONG_BRANCH
            echo -n "$REV" > $src_root/REV
            echo -n "$PKG_REV" > $src_root/PKG_REV
            echo '#---------------------------------------' buildpkg.repo end
        }
}

set -e

case "$buildtype,$mach,$BUILDVER" in
   both,x86_64,*)
        do_rpm_package "amanda_enterprise${BUILDVER}.spec" \
              "${DEFINES[@]}" \
              --define "subpkg server"
        #
        STACK_BRANCH=none do_rpm_package "amanda_enterprise_client${BUILDVER}.spec" \
              --define "subpkg client"
        #
        ;;

   server,x86_64,*)
        do_rpm_package "amanda_enterprise${BUILDVER}.spec" \
              "${DEFINES[@]}" \
              --define "subpkg server"

        ;;

   client,*,*) ;&  both,*,*)
	STACK_BRANCH=none do_rpm_package "amanda_enterprise_client${BUILDVER}.spec" \
              --define "subpkg client"

        ;;

   platform,x86_64,*)
        [ -L ./bitrock-stack -a -d ./bitrock-stack/. ] || ./autochk
        ( cd ./bitrock-stack; git fetch --tags origin; git branch | grep ^__ | xargs -r git branch -D 2>/dev/null ) ||:
        generate_override_version | cat -n
        export OVERRIDE_VERSION="$(generate_override_version)"
        reset_set_zmanda_version
	do_rpm_package "zmanda-platform${BUILDVER}.spec" \
              "${DEFINES[@]}"
        ;;

   *) echo "ERROR: cannot build combination of $buildtype-$mach-${BUILDVER:-3.6}" >&2; exit -1 ;;
esac

true
