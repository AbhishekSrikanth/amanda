#!/usr/bin/env bash

# This is useful for debugging
#set -x

# Explanation of solaris paths:
# /opt/zmanda/amanda/common/*: Bitrock stack.
# /opt/SUNWspro/*: Sun compiler, NOT USED FOR PACKAGING.
# /opt/csw/*: OpenCSW.
# /usr/ccs/*: sun compilation tools (ld, lex, yacc)
# /usr/sfw/*: SunFreeware, sometimes. (solaris 10)
# /usr/local/*: SunFreeware, othertimes. (solaris 8)

prep_sun_build() {
    export amanda_user="amandabackup"
    export amanda_group="amandabackup"
    # Not Absolute!  Remember to prefix a "/" except in pkgproto.
    export BITROCK_DIR=/opt/zmanda/amanda
    export PREFIX=$BITROCK_DIR/amanda
    # etc dir, not amanda's et subdir!
    export ETCDIR=$BITROCK_DIR/etc
    export DBGDIR=$BITROCK_DIR/log

    # CC=/usr/sfw/bin/gcc
    export CFLAGS="-O2 -pipe -m32"
    export LEX=flex
    export PATH=/usr/sfw/bin:/opt/csw/gnu:/opt/csw/bin:/bin:/sbin:/usr/sbin:/usr/bin:/usr/ccs/bin
    export CPPFLAGS=""
    export PKG_CONFIG_PATH="/usr/lib/pkgconfig"
    export GLIB_CFLAGS="-I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include"
    export GLIB_LIBS="-lglib-2.0 -lgobject-2.0 -lgthread-2.0"
    export LDFLAGS="-L/usr/lib -R/usr/lib -L/opt/csw/lib -R/opt/csw/lib -L/usr/sfw/lib -Wl,-z,ignore"
    export AMLIBDIR="$PREFIX/lib"
    export CONF="--with-amlibdir=$AMLIBDIR CC=$CC "
    # for client only...
    export CONF="$CONF --without-server --disable-s3-device PERL=/opt/csw/bin/perl"

    alias sed=gsed
    alias make=gmake

#    elif [ x"$1" = x"server" ]; then
#        export PATH="$BITROCK_DIR/common/bin:/opt/csw/bin:$PATH"
#        export CFLAGS="-O2 -pipe -m64"
#        # [note: seems to need glib-2.0 of a more advanced state]
#        export CPPFLAGS="-I$BITROCK_DIR/common/include -I/opt/csw/include $CPPFLAGS"
#        export PKG_CONFIG_PATH="$BITROCK_DIR/common/lib/pkgconfig:$PKG_CONFIG_PATH:/opt/csw/lib/pkgconfig"
#        export LDFLAGS="-L$BITROCK_DIR/common/lib -R$BITROCK_DIR/common/lib $LDFLAGS"
#        export CONF="$CONF --with-libcurl=$BITROCK_DIR/common --enable-s3-device PERL=$BITROCK_DIR/perl/bin/perl MTX=/opt/csw/sbin/mtx  " 
}

#	--quiet \

do_cwd_build() {
    echo "Running configure.."
    CONF="$CONF \
	STAR=$(type -p star) \
	GNUTAR=$(type -p gtar) \
	--with-user=$amanda_user \
	--with-group=$amanda_group \
	--prefix=$PREFIX \
	--sysconfdir=$ETCDIR \
	--with-amandates=$ETCDIR/amandates \
	--with-security-file=$ETCDIR/amanda-security.conf \
	--with-amlibexecdir=$AMLIBDIR/amanda \
	--with-amperldir=$AMLIBDIR/amanda/perl \
	--with-amdatadir=$PREFIX \
	--with-gnutar-listdir=$PREFIX/gnutar-lists \
	--with-index-server=localhost \
	--with-tape-server=localhost \
	--with-fqdn \
	--with-bsd-security \
	--with-bsdtcp-security \
	--with-bsdudp-security \
	--with-udpportrange=800,840 \
	--with-tcpportrange=11000,11040 \
	--with-low-tcpportrange=800,840 \
	--with-ssh-security \
	--with-debugging=$DBGDIR \
	--with-assertions \
	--with-readline \
	--without-gnuplot \
	--disable-installperms \
	--disable-syntax-checks \
        --disable-static"

    # PKG_CONFIG_PATH was exported, so is in the environment.
    ./configure CFLAGS="$CFLAGS" \
	CPPFLAGS="$CPPFLAGS" \
	LDFLAGS="$LDFLAGS" \
        GLIB_CFLAGS="$GLIB_CFLAGS" \
        GLIB_LIBS="$GLIB_LIBS" \
        GLIB_GENMARSHAL=glib-genmarshal \
        GOBJECT_QUERY=gobject-query \
        GLIB_MKENUMS=glib-mkenums \
	MAKE=$(type -p gmake) \
	$CONF || exit 1

    echo "Building $1.."

    # rpcgen should be run natively on solaris, linux generated XDR stubs
    # are not compatible. Specially when being compiled in 64 bit mode.
    # Ideally this should be part of Make.

    (cd ndmp-src;rm -f ndmp?_xdr.c)

    gmake $silent_make_flags || exit 1
    gmake $silent_make_flags DESTDIR=$INSTALL_DEST install || exit 1

    # the gnulib makefiles create $AMLIBDIR/charset.alias in hopes of "merging"
    # it with a similar file from other applications.  This doesn't work with
    # DESTDIR, and anyway Amanda doesn't need this kind of fanciness because it
    # doesn't really use gettext.  So we just kill the file.  See bug 10955 for
    # more detail.

    rm -f $INSTALL_DEST/$AMLIBDIR/charset.alias

    # Create gnutar-lists
    mkdir $INSTALL_DEST/$PREFIX/gnutar-lists

    # amanda does not create $ETCDIR
    mkdir -p $INSTALL_DEST/$ETCDIR || exit 1

    echo "Amanda Enterprise Edition - version $VERSION" > $INSTALL_DEST/$PREFIX/amanda-release || exit 1
}

do_cwd_package() {
    subpkg_root=$1
    pkg_out=$2
    pkg_dest_reldir=${PKG_DEST#$src_root/}

    [ -d $subpkg_root -a -d $pkg_dest_reldir -a -d $INSTALL_DEST -a -d $PKG_DEST ] || exit 1

    # install is simple?
    [ $INSTALL_DEST -ef $PKG_DEST/../install ] || exit 1;
    [ $src_root -ef $PKG_DEST/../.. ] || exit 1;

    # copy the files from the packaging-root 
    cp $buildpkg_dir/postremove.src $subpkg_root/* $PKG_DEST

    # must subst from this dir (remove the abs path)
    [ ${PWD} -ef $src_root ] || exit 1
    do_file_subst $pkg_dest_reldir/{pkginfo,preinstall,postinstall,postremove}.src

    # ----------------------------------------------------------------------
    cd $pkg_dest_reldir

    # Some but not all solaris packages have arch-plat-os dependent depend files.
    [ -f depend-$GNU_TRIPLET ] && mv depend-$GNU_TRIPLET depend;
    rm depend-*;

    # Add the contents of 'pkgproto' along with all installed files to
    # 'prototype'.  pkgproto will generate file list for provided base
    # directories including the base dir. Including base dir in the pkg should
    # be avoided as the pkg installation will try to alter the base directory
    # permissions and ownership per pkg settings if included.

    cp ./pkgproto ./prototype.tmp
    ( cd ../install; pkgproto .) >> ./prototype.tmp || exit 1;
    perl $buildpkg_dir/process_proto.pl ../../installperms.sh ./prototype.tmp > ./prototype || exit 1
    rm ./prototype.tmp

    # Look for installed files in $INSTALL_DEST and create package in $PKG_DEST
    # then "translate" it into a .pkg file 

    pkgmk -r ../install -o -f ./prototype -d . || exit 1
    pkgtrans -s . $pkg_out all

    # ----------------------------------------------------------------------
    cd ../.. || exit 1
}

# Don't change username lightly.
# need this name
export pkg_name=amanda_enterprise

# set the var buildpkg_dir as well
. packaging/common/build_functions.sh
# create package version files 
. packaging/common/set_zmanda_version

# export PKG_NAME_VER=amanda-enterprise-$VERSION
# export PKG_FILE_NAME=amanda-enterprise-$VERSION
export PKG_DIR=${PWD}

gen_pkg_build_config $buildpkg_dir/client

# take the spec/spec.src files and make a tarfile
gen_pkg_environ

[ -L ${PKG_DIR}/sun-pkgbuild/build ] || exit 1

prep_sun_build
# client only currently
do_cwd_build $buildpkg_dir/client

# now that config is done...
export GNU_TRIPLET=$(/bin/sh $src_root/config/config.guess)

do_cwd_package $buildpkg_dir/client $src_root/ZMANae-client-${VERSION}-${GNU_TRIPLET}.pkg 

# .... in case we try a server build again....
