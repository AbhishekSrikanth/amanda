#!/usr/bin/make -f

SHELL = /bin/bash -x
#
#
SRCDIR			  := $(shell pwd -P)
# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

AMVER=%%VERSION%%

BITROCK_DIR=%%INSTALL_TOPDIR%%
AMANDAHOMEDIR=$(LOCALSTATEDIR)/lib/amanda
BUILD_TOPDIR=$(SRCDIR)
# Comment this to disable silent make.
#MAKEFLAGS+=s LIBTOOLFLAGS=--silent

CC := $(shell command -v gcc)

GCC_TARGET := $(shell $(CC) -dumpmachine | tr -d '\n')

ifeq ($(findstring x86_64,$(GCC_TARGET)),x86_64)
LIBARCHDIR=lib/$(GCC_TARGET)
# 64 bit... no more needed
# LIBARCHDIR=lib/x86_64-linux-gnu
else
LIBARCHDIR=lib/$(GCC_TARGET)
# 32 bit... no more needed
# LIBARCHDIR=lib/i586-linux-gnu
endif


HOST_GNU_TYPE   = $(GCC_TARGET)
BUILD_GNU_TYPE  = $(GCC_TARGET)

DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

# These are variables that the user can override.  They get used in various
# places during configure, build, and install.
PREFIX=/usr
BINDIR=$(PREFIX)/bin
LIBDIR=$(PREFIX)/lib
LIBEXECDIR=$(LIBDIR)
AMLIBEXECDIR=$(LIBEXECDIR)/amanda
# must be architecture-specific ...
SHLIBDIR=$(PREFIX)/$(LIBARCHDIR)
AMLIBDIR=$(SHLIBDIR)/amanda
MANDIR=$(PREFIX)/share/man
DOCDIR=$(PREFIX)/share/doc
SYSCONFDIR=/etc
AMANDATES=$(SYSCONFDIR)/amandates
LOCALSTATEDIR=/var
LOGDIR=$(LOCALSTATEDIR)/log/amanda
AMPERLDIR=$(AMLIBDIR)/perl
BITROCK_REPO_DIR=$(SRCDIR)/bitrock-stack

BITROCK_REPO_LIBDIR=$(BITROCK_REPO_DIR)/common/lib
BITROCK_LIBDIR=$(BITROCK_DIR)/common/lib

SCRIPTS_PATH=$(BITROCK_REPO_DIR)/perl/bin:$(BITROCK_REPO_DIR)/python/bin
SCRIPTS_LDPATH=$(BITROCK_REPO_DIR)/python/lib

BITROCK_REPO_LDPATH=$(BITROCK_REPO_DIR)/common/lib:$(BITROCK_REPO_DIR)/python/lib
BITROCK_LDPATH=$(AMLIBDIR):$(BITROCK_DIR)/common/lib

AMANDAUSER=%%AMANDAUSER%%
AMANDAGROUP=%%AMANDAGROUP%%

CERT_BUNDLE_URL="https://curl.haxx.se/ca/cacert.pem"

define CONFIG_FLAGS_COMMON
MAILER=$(BINDIR)/mail \
--enable-as-needed \
--quiet \
--host=$(HOST_GNU_TYPE) \
--build=$(BUILD_GNU_TYPE) \
--prefix=$(PREFIX) \
--bindir=$(BINDIR) \
--mandir=$(MANDIR) \
--libexecdir=$(LIBEXECDIR) \
--libdir=$(LIBDIR) \
--with-amlibdir=$(AMLIBDIR) \
--with-amperldir=$(AMPERLDIR) \
--enable-shared \
--sysconfdir=$(SYSCONFDIR) \
--localstatedir=$(LOCALSTATEDIR) \
--with-amdatadir=$(AMANDAHOMEDIR) \
--with-gnutar-listdir=$(AMANDAHOMEDIR)/gnutar-lists \
--with-index-server=localhost \
--with-tape-server=localhost \
--with-user=$(AMANDAUSER) \
--with-group=$(AMANDAGROUP) \
--with-fqdn \
--with-bsd-security \
--with-bsdtcp-security \
--with-bsdudp-security \
--with-amandahosts \
--with-amandates=$(AMANDATES) \
--with-debugging=$(LOGDIR) \
--with-tcpportrange=11000,11040 \
--with-udpportrange=800,840 \
--with-low-tcpportrange=800,840 \
--with-ssh-security \
--with-assertions \
--with-failure-code \
--with-readline \
--disable-rpath \
--enable-s3-device \
--enable-manpage-build \
--disable-installperms \
--with-xsltproc=$(BITROCK_REPO_DIR)/common/bin/xsltproc \
--disable-syntax-checks
endef

# variables for the makefile
	
PKG_CONFIG_PATH  = \
   $(BITROCK_REPO_DIR)/common/lib/pkgconfig \
   $(BITROCK_REPO_DIR)/python/lib/pkgconfig \
   $(BITROCK_REPO_DIR)/apache2/lib/pkgconfig

export PYTHON=$(BITROCK_REPO_DIR)/python/bin/python2.7
export PERL=$(BITROCK_REPO_DIR)/perl/bin/perl

AMPERL=$(BITROCK_DIR)/perl/bin/perl

######################################################################
# These are the actual env-vars that we need to compile against bitrock
######################################################################
######## START DEFINE MACRO ##############################
define CONFIG_VARS_BITROCK
  PATH="$(BITROCK_REPO_DIR)/perl/bin:$(BITROCK_REPO_DIR)/python/bin:$${PATH}" \
  LD_LIBRARY_PATH="$(BITROCK_REPO_LDPATH):$${LD_LIBRARY_PATH}" \
  PKG_CONFIG_PATH="$(PKG_CONFIG_PATH):$${PKG_CONFIG_PATH}"
endef
######## END DEFINE MACRO ##############################

######## DEFINE MACRO ##############################
define CONFIG_FLAGS_BITROCK
  GNUTAR=/bin/tar \
  \
  CPPFLAGS="-I$(BITROCK_REPO_DIR)/common/include \
	  -I$(BITROCK_REPO_DIR)/mysql/include \
	  -I$(BITROCK_REPO_DIR)/php/include \
	  -I$(BITROCK_REPO_DIR)/python/include" \
  \
  LDFLAGS="-Wl,--disable-new-dtags \
	-Wl,-rpath-link -Wl,$(BITROCK_REPO_LIBDIR) \
	-Wl,-rpath -Wl,$(BITROCK_LDPATH) \
	-L$(BITROCK_REPO_LIBDIR)" \
  \
  PERL=$(PERL) \
  AMPERL=$(AMPERL) \
  PYTHON=$(PYTHON) \
  --with-libcurl=$(BITROCK_REPO_DIR)/common
endef

######## DEFINE MACRO ##############################
define SCRIPT_PATH_VARS
  PATH="$(SCRIPTS_PATH):$${PATH}" \
  LD_LIBRARY_PATH="$(SCRIPTS_LDPATH):$${LD_LIBRARY_PATH}"
endef

#
# subpackage paths
#
r=$(SRCDIR)/debian/tmp
buildroot=$(SRCDIR)/debian/amanda-enterprise-backup-server
# buildroot_client=$(SRCDIR)/debian/amanda-enterprise-backup-client
platform=$(SRCDIR)/debian/amanda-enterprise-platform
devel=$(SRCDIR)/debian/amanda-enterprise-backup-server-devel

WD=$(SRCDIR)

build: build-stamp
build-stamp:
	dh_testdir
	
	# modify libtool.m4 to *only* perform rpath mods as we need (for install in %%INSTALL_TOPDIR%%)
	if ! [ -f ./configure ]; then  \
	    libtoolize -i; \
	    sed -i -e '/[ (]hardcode_libdir_flag_spec.*=/s,\$${wl}-rpath ,\$${wl}--disable-new-dtags $${wl}-rpath-link ,g' config/libtool.m4; \
	    sed -i -e '/[ (]hardcode_libdir_flag_spec.*=/s,\$$wl-rpath ,\$$wl--disable-new-dtags $$wl-rpath-link ,g' config/libtool.m4; \
	fi
	
	# all must be done if configure is not set already
	[ -f ./configure ] || ./autogen
	
	echo -------------------
	echo "CONFIG_FLAGS_BITROCK set to $(CONFIG_FLAGS_BITROCK)"
	echo -------------------
	echo "CONFIG_VARS_BITROCK set to $(CONFIG_VARS_BITROCK)"
	echo -------------------
	
	# need LDPATH, PATH (for perl/python)
	set -x; $(CONFIG_VARS_BITROCK) \
	    ./configure \
		$(CONFIG_FLAGS_COMMON) \
		$(CONFIG_FLAGS_BITROCK)
	touch missing
	
	set -x; $(SCRIPT_PATH_VARS) \
        LEX=flex \
        YACC=bison \
	    $(MAKE) -j`nproc`
	
	touch $@
	echo ------------------- END BUILD

DEVEL_CONFIG_COPIED = config.rpath amanda gnulib macro-archive config.h
DEVEL_INCLUDE_FILES =  \
	amanda.h amutil.h amflock.h config.h conffile.h device.h \
	debug.h file.h sockaddr-util.h safe-read.h full-read.h full-write.h \
	s3-util.h am_sl.h amjson.h glib-util.h property.h fileheader.h directtcp.h \
	directtcp-connection.h

# Build architecture-dependent files here.
binary-install-server: build-stamp
	dh_testdir
	rm -rf $(buildroot)
	mkdir -p $(buildroot)
	dh_prep --package=amanda-enterprise-backup-server
	dh_installdirs -v --package=amanda-enterprise-backup-server
	
	echo ------------------- START INSTALL
	set -x; $(SCRIPT_PATH_VARS) \
		$(MAKE) -j1 install DESTDIR=$(buildroot)
	
	# substitute a real version of perl as needed
	bitrock_repo_dir_abs="$$(realpath $(BITROCK_REPO_DIR))"; \
	find $(buildroot)$(AMLIBEXECDIR)/* \
	    $(buildroot)$(AMLIBEXECDIR)/application/* \
	    $(buildroot)$(AMLIBEXECDIR)/rest-server/bin/* \
	    $(buildroot)/usr/sbin/*  -type f -print -o -type d -prune | \
	 while read i; do \
	     read -N2 j < $$i; \
	     [[ "$$j" == '#!' ]] || continue; \
	     sed -i -e "s|$$bitrock_repo_dir_abs|$(BITROCK_DIR)|g" \
		    -e "s|$(BITROCK_REPO_DIR)|$(BITROCK_DIR)|g" \
	       $$i
	 done
	
	##################
	# needed directories
	##################
	# rm -f $(buildroot)$(AMANDAHOMEDIR)/example/inetd.conf.amandaclient
	
	echo "Amanda Enterprise Edition - version $(AMVER)" > $(buildroot)$(AMANDAHOMEDIR)/amanda-release

##################
################################ permissions for backup-server
##################
perm-install-server: binary-install
	dh_testroot
	##################
	# root-setuid executable / private-contents
	##################
	[ -s installperms.sh ] && \
            while read d _chown _chmod path; do \
                eval "chown $$_chown $(buildroot)$$path && chmod $$_chmod $(buildroot)$$path"; \
            done < installperms.sh
	
	install -o root -g root -m 0644 debian/lintian \
		$(buildroot)/usr/share/lintian/overrides/amanda-enterprise-backup-server
	
	chown -R root:root $(buildroot)$(AMLIBEXECDIR)
	find $(buildroot)$(AMLIBEXECDIR) -type f | \
		xargs chmod 0644
	find $(buildroot)$(AMLIBEXECDIR) -type d | \
		xargs chmod 0755
	
	chmod 0755 $(buildroot)$(AMLIBEXECDIR)/*
	chmod 0755 $(buildroot)$(AMLIBEXECDIR)/application/*
	chmod 0755 $(buildroot)$(AMLIBEXECDIR)/rest-server/bin/*
	
	chown root:%%AMANDACLIGROUP%% $(buildroot)$(AMLIBEXECDIR)/ambind
	chmod 04750 $(buildroot)$(AMLIBEXECDIR)/ambind
	chown root:%%AMANDACLIGROUP%% $(buildroot)$(AMLIBEXECDIR)/application/amgtar
	chmod 04755 $(buildroot)$(AMLIBEXECDIR)/application/amgtar
	chown root:%%AMANDACLIGROUP%% $(buildroot)$(AMLIBEXECDIR)/application/amstar
	chmod 04755 $(buildroot)$(AMLIBEXECDIR)/application/amstar
	chown root:%%AMANDACLIGROUP%% $(buildroot)$(AMLIBEXECDIR)/calcsize
	chmod 04750 $(buildroot)$(AMLIBEXECDIR)/calcsize
	chown root:%%AMANDACLIGROUP%% $(buildroot)$(AMLIBEXECDIR)/killpgrp
	chmod 04750 $(buildroot)$(AMLIBEXECDIR)/killpgrp
	chown root:%%AMANDACLIGROUP%% $(buildroot)$(AMLIBEXECDIR)/rundump
	chmod 04750 $(buildroot)$(AMLIBEXECDIR)/rundump
	chown root:%%AMANDACLIGROUP%% $(buildroot)$(AMLIBEXECDIR)/runtar
	chmod 04750 $(buildroot)$(AMLIBEXECDIR)/runtar
	
	chmod 0444  $(buildroot)$(AMLIBEXECDIR)/amcat.awk
	
	chmod 0444  $(buildroot)$(AMLIBEXECDIR)/amplot.awk
	chmod 0444  $(buildroot)$(AMLIBEXECDIR)/amplot.g
	chmod 0444  $(buildroot)$(AMLIBEXECDIR)/amplot.gp
	
	##################
	# internal executible files
	##################
	chown -R $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)/usr/sbin/*
	chmod 755 $(buildroot)/usr/sbin/*
	##################
	# internal readable / private-contents files
	##################
	chown -R $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(SYSCONFDIR)/amanda
	chmod -R u=rwX,g=rX,o= $(buildroot)$(SYSCONFDIR)/amanda
	
	# NOTE: non-recursive setup of dirs
	chown $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(LOGDIR)
	chmod 0770 $(buildroot)$(LOGDIR)
	chown $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(LOGDIR)/client
	chmod 0755 $(buildroot)$(LOGDIR)/client
	chown $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(LOGDIR)/server
	chmod 0700 $(buildroot)$(LOGDIR)/server
	chown $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(LOGDIR)/amanda-rest-server-log
	chmod 0700 $(buildroot)$(LOGDIR)/amanda-rest-server-log
	
	##################
	# homedir internal files
	##################
	chown -R $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(AMANDAHOMEDIR)/example/
	chmod -R u=rwX,g=rX,o= $(buildroot)$(AMANDAHOMEDIR)/example/
	chown -R $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(AMANDAHOMEDIR)/gnutar-lists/
	chmod -R u=rwX,g=rwX,o= $(buildroot)$(AMANDAHOMEDIR)/gnutar-lists/
	chown -R $(AMANDAUSER):$(AMANDAGROUP) $(buildroot)$(AMANDAHOMEDIR)/template.d/
	chmod -R u=rwX,g=rX,o= $(buildroot)$(AMANDAHOMEDIR)/template.d/
	
	##################
	# resource files only
	##################
	chown root:root $(buildroot)$(AMLIBDIR)/lib*.so
	chmod 0444 $(buildroot)$(AMLIBDIR)/lib*.so
	chown root:root $(buildroot)$(SYSCONFDIR)/amanda-security.conf
	chmod 0644 $(buildroot)$(SYSCONFDIR)/amanda-security.conf
	# rely on sanity-check permissions otherwise
	# ---------------------- ASSESS PERMISSIONS NOW IF NEEDED ----------


##################
################################ install for backup-server-devel
##################
binary-install-devel: binary-install-server
	dh_testdir
	rm -rf $(devel)
	mkdir -p $(devel)
	dh_prep --package=amanda-enterprise-backup-server-devel
	dh_installdirs -v --package=amanda-enterprise-backup-server-devel
	
	# snip off $(buildroot) from start ... to dup the path
	mkdir -p $(devel)$(AMLIBDIR)
	ls -1 $(buildroot)$(AMLIBDIR)/*.{a,la,so} $(buildroot)$(AMLIBDIR)/*.so.* 2>/dev/null | xargs cp -a -t $(devel)$(AMLIBDIR)
	mkdir -p $(devel)$(AMANDAHOMEDIR)/amanda-autoconf
	mkdir -p $(devel)/usr/include/amanda
	
	echo "Amanda Enterprise Edition - version $(AMVER)" > $(devel)$(AMANDAHOMEDIR)/amanda-release
	
	rm -f $(devel)$(AMANDAHOMEDIR)/amanda-config
	
	cp -a ./config.status ./config.status.save
	sed -i -e ':redo' -e '/"\\$$/{N;s,"\\\n",,;b redo}' ./config.status.save
	
	command -v realpath >/dev/null || realpath() { readlink -e "$@"; }
	build_topdir=$(BUILD_TOPDIR); \
	build_topdir_abs=$$(realpath $(BUILD_TOPDIR)); \
	bitrock_repo_dir="$(BUILD_TOPDIR)/bitrock-stack"; \
	bitrock_repo_dir_abs="$$(realpath $$bitrock_repo_dir)"; \
	./config.status.save --config | \
	   sed \
		 -e "s|$$build_topdir_abs|$$build_topdir|g" \
		 -e "s|$$bitrock_repo_dir_abs|$$bitrock_repo_dir|g" \
		 -e "s|$$bitrock_repo_dir|%{BITROCK_REPO_DIR}|g" \
		 -e "s|$$build_topdir|%{BUILD_TOPDIR}|g" \
		 -e "s| $(AMLIBDIR)/| %{DESTDIR}$(AMLIBDIR)/|g" \
	     >$(devel)$(AMANDAHOMEDIR)/amanda-config
	
	cp -a $(addprefix config/,$(DEVEL_CONFIG_COPIED)) $(devel)$(AMANDAHOMEDIR)/amanda-autoconf
	
	pkg_root_rev=$$(git submodule | sed -e '\,/packaging,!d' -e 's,^ *\(.........\).*,\1,'); \
		cp -av ./config.status.save $(devel)$(AMANDAHOMEDIR)/amanda-autoconf/config.status-$${pkg_root_rev}
	
	# each may have a different *-src dir
	cp -a $(addprefix */,$(DEVEL_INCLUDE_FILES)) $(devel)/usr/include/amanda
		
	touch dummy.la
	#
	# these files can't work with old paths in them anyway
	#
	command -v realpath >/dev/null || realpath() { readlink -e "$@"; }
	build_topdir=$(BUILD_TOPDIR); \
	build_topdir_abs=$$(realpath $(BUILD_TOPDIR)); \
	bitrock_repo_dir="$(BUILD_TOPDIR)/bitrock-stack"; \
	bitrock_repo_dir_abs="$$(realpath $$bitrock_repo_dir)"; \
	find dummy.la $(devel)/usr/include/amanda $(devel)$(AMANDAHOMEDIR) -type f | \
		xargs sed -i \
		     -e "s|$$build_topdir_abs|$$build_topdir|g" \
		     -e "s|$$bitrock_repo_dir_abs|$$bitrock_repo_dir|g" \
		     -e "s|$$bitrock_repo_dir|%{BITROCK_REPO_DIR}|g" \
		     -e "s|$$build_topdir|%{BUILD_TOPDIR}|g"
	
	command -v realpath >/dev/null || realpath() { readlink -e "$@"; }
	build_topdir=$(BUILD_TOPDIR); \
	build_topdir_abs=$$(realpath $(BUILD_TOPDIR)); \
	bitrock_repo_dir="$(BUILD_TOPDIR)/bitrock-stack"; \
	bitrock_repo_dir_abs="$$(realpath $$bitrock_repo_dir)"; \
	find dummy.la $(devel)$(LIBDIR) -type f -name \*.la | \
		xargs sed -i \
		     -e "s|$$build_topdir_abs|$$build_topdir|g" \
		     -e "s|$$bitrock_repo_dir_abs|$$bitrock_repo_dir|g" \
		     -e "s|$$bitrock_repo_dir|%{BITROCK_REPO_DIR}|g" \
		     -e "s|$$build_topdir|%{BUILD_TOPDIR}|g" \
		     -e "/dependency_libs=/s| $(AMLIBDIR)/| %{DESTDIR}$(AMLIBDIR)/|g"
	
	find dummy.la $(devel)$(LIBDIR) -type f -name \*.la | \
		xargs chmod uog-x
	rm -f dummy.la
	#
	# confirm no paths are left
	#
	set -x; if find $(devel)/usr/include/amanda $(devel)$(AMANDAHOMEDIR) -type f -exec grep -q $(BUILD_TOPDIR) \{} \; -print | grep -q .; then exit -1; fi
	set -x; if find $(devel)$(LIBDIR) -type f -name \*.la  -exec grep -q $(BUILD_TOPDIR) \{} \; -print | grep -q .; then exit -1; fi
	
	cp -f $(buildroot)$(SYSCONFDIR)/amanda/amanda-security.conf $(buildroot)$(SYSCONFDIR)/amanda-security.conf

##################
################################ permissions for backup-server-devel
##################
perm-install-devel: binary-install
	dh_testroot
	chown -R root:root $(devel)
	find $(devel) -type f | \
		xargs chmod 0644
	find $(devel) -type d | \
		xargs chmod 0755
	# ---------------------- ASSESS PERMISSIONS NOW IF NEEDED ----------

binary-install-platform: binary-install-server
	dh_prep --package=amanda-enterprise-platform
	dh_installdirs -v --package=amanda-enterprise-platform
	
	rm -rf $(platform)$(BITROCK_DIR)
	mkdir -p $(platform)$(BITROCK_DIR)
	
	stack_path=
	
	. packaging/common_z/common_functions.sh;  \
	   dir=$$(git_submodule_gitdir 000-external/tools-archives); \
	   ref=$$(git_submodule_ref 000-external/tools-archives); \
	   set -xv; git --git-dir=$$dir archive $${ref}:stack-output | \
	         tar -xf - -C $(platform)$(BITROCK_DIR)
	
	DESTDIR=$(platform) $(platform)$(BITROCK_DIR)/install-var-subst.sh
	
	set -xv; curl $(CERT_BUNDLE_URL).gz | \
	   gunzip > $(platform)$(BITROCK_DIR)/common/share/curl/curl-ca-bundle.crt
	
	rmdir $(platform)$(BITROCK_DIR)/php/php

perm-install-platform: binary-install
	dh_testroot
	chown root:root -R $(platform)
	chown mysql:mysql -R $(platform)$(BITROCK_DIR)/mysql/*
	chown $(AMANDAUSER):mysql \
		$(platform)$(BITROCK_DIR)/php/data  	\
		$(platform)$(BITROCK_DIR)/php/tmp 	\
		$(platform)$(BITROCK_DIR)/apache2/logs
	chmod 0775 \
		$(platform)$(BITROCK_DIR)/php/data  	\
		$(platform)$(BITROCK_DIR)/php/tmp 	\
		$(platform)$(BITROCK_DIR)/apache2/logs
	
	find $(platform)$(BITROCK_DIR)/perl/lib -type f | \
		xargs chmod 0444
	find $(platform)$(BITROCK_DIR)/perl/lib -type f -name \*.so | \
		xargs chmod 0555
	find $(platform)$(BITROCK_DIR)/apache2/conf \
	  $(platform)$(BITROCK_DIR)/apache2/error \
	  $(platform)$(BITROCK_DIR)/apache2/htdocs \
	  $(platform)$(BITROCK_DIR)/apache2/icons \
	  $(platform)$(BITROCK_DIR)/php/etc \
	  $(platform)$(BITROCK_DIR)/php/lib \
	  $(platform)$(BITROCK_DIR)/licenses -type f | \
		xargs chmod u=rwX,og=rX
	
	chmod uog=rx \
	  $(platform)$(BITROCK_DIR)/perl/bin/* \
	  $(platform)$(BITROCK_DIR)/python/bin/* \
	  \
	  $(platform)$(BITROCK_DIR)/apache2/bin/* \
	  $(platform)$(BITROCK_DIR)/apache2/cgi-bin/* \
	  $(platform)$(BITROCK_DIR)/apache2/lib/* \
	  $(platform)$(BITROCK_DIR)/apache2/modules/* \
	  $(platform)$(BITROCK_DIR)/apache2/scripts/* \
	  $(platform)$(BITROCK_DIR)/php/bin/* \
	  $(platform)$(BITROCK_DIR)/php/scripts/* 
	
	find $(platform) -type d | \
		xargs chmod uog=rX   # just to be sure

#
# bottleneck after completed all installation
#
binary-install: binary-install-stamp
binary-install-stamp:
	LD_PRELOAD= \
	LD_LIBRARY_PATH= \
	    $(MAKE) -f $(firstword $(MAKEFILE_LIST)) \
	        binary-install-server binary-install-platform binary-install-devel 
	#
	dh_installdocs -v
	#
	# One directory of examples does not warrant an "debian/.examples"
	# file.  These files are repeated in %%AMANDAUSER%%'s home dir.
	# dh_installexamples -v $(r)$(AMANDAHOMEDIR)/example
	# Installs both amanda and debian changelogs and
	dh_installchangelogs -v ChangeLog
	dh_strip --dbg-package=amanda-enterprise-backup-server-dbg -X $(BITROCK_DIR)
	#
	dh_compress
	
	dh_fixperms -v
	# need external dependencies
	LD_PRELOAD= /usr/bin/touch $@

#
# bottleneck after completed all permissions resets
#
final-install:
	# fakeroot can remain entirely within this MAKE only,
	#    if perms were remembered from these chmod/chown calls
	env -- $(MAKE) -f $(firstword $(MAKEFILE_LIST)) \
	         perm-install-devel perm-install-server perm-install-platform
	dh_makeshlibs -v
	dh_shlibdeps -pamanda-enterprise-backup-server -v \
		-l"$(SHLIBDIR):$(AMLIBDIR)"
	dh_shlibdeps -pamanda-enterprise-platform -v \
		-l"$(BITROCK_LIBDIR):$(BITROCK_DIR)/python/lib:$(BITROCK_DIR)/apache2/lib:$(BITROCK_DIR)/mysql/lib"
	# only check perl deps for the backup_server pkg
	$(SCRIPT_PATH_VARS) \
	    dh_perl -pamanda-enterprise-backup-server -v $(AMPERLDIR)
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

clean:
	dh_testdir
	-[ -f Makefile ] && make -s LIBTOOLFLAGS=--silent clean
	-[ -f Makefile ] && make -s LIBTOOLFLAGS=--silent distclean
	-rm -f build-stamp missing config/config.h common-src/genversion
	-find . -type d -name .deps -exec rm -rf {} \;
	-test -r /usr/share/misc/config.sub && \
		cp -f /usr/share/misc/config.sub config/config.sub
	-test -r /usr/share/misc/config.guess && \
		cp -f /usr/share/misc/config.guess config/config.guess
	dh_clean -d -v  # build dirs only
	( cd $(BITROCK_REPO_DIR); git reset --hard; git clean -d -f; )

binary: final-install
.PHONY: build clean binary-install binary-install-server binary-install-devel binary-install-platform
.PHONY: final-install perm-install-server perm-install-devel perm-install-platform
