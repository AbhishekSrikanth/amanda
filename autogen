#!/usr/bin/env bash

# cd to the directory we're run from
cd `dirname $0`

[ -d /opt/csw/gnu ] && export PATH=/opt/csw/gnu:${PATH}

# remove any symlinks in local paths
cd $(pwd -P)

# clean up
rm -f aclocal.m4
rm -rf autom4te*.cache
rm -f configure

die() {
    echo "${@}"
    exit 1
}

echo "See DEVELOPING for instructions on updating:"
echo " * gettext macros"
echo " * gnulib"
echo " * libtool files"

amanda_cfg="./config"
amanda_version_setup=set_full_version
# if you change this, please also change it in the root Makefile.am
includes="-I. -Iconfig -I$amanda_cfg -I$amanda_cfg/gettext-macros -I$amanda_cfg/gnulib -I$amanda_cfg/amanda -I$amanda_cfg/macro-archive -I/usr/share/aclocal"

# file-list are included files in top Makefile.am
echo "..creating file lists"
(   cd $amanda_cfg
    for m4dir in amanda gettext-macros gnulib macro-archive; do
	echo "## this file is automatically generated by autogen" > "$m4dir/file-list"
	for f in $m4dir/*.m4; do echo "EXTRA_DIST += $f" >> "$m4dir/file-list"; done
    done

    echo "## this file is automatically generated by autogen" > "automake/file-list"
    for f in automake/*.am; do echo "EXTRA_DIST += $f" >> "automake/file-list"; done
)

echo "..generate FULL_VERSION"
./packaging/common/set_zmanda_version || die "$amanda_version_setup failed"

# get autoconf / automake from all one place ... or dont succeed
autoconf_path=$(command -v libtoolize)
autoconf_path=${autoconf_path%/*}

# for Solaris, only for autoconf tools, ... prefer /usr/bin as a binary path
[ -x /usr/bin/libtoolize ] && autoconf_path=/usr/bin

export PATH=${autoconf_path}:${PATH}

# replace local tools with the custom versions
( p=$(command -v libtoolize); set -x; $p -i; )

# need 2.63 or later autoconf/autom4te
AUTOM4TE="$(ls -1 $autoconf_path/autom4te2[6789]* $autoconf_path/autom4te[3-9]* 2>/dev/null)"
# last space-separated word only..
AUTOM4TE=${AUTOM4TE##* }
AUTOM4TE=${AUTOM4TE##*\n}
# suffix numbers only
AC_VERSION_SFX="${AUTOM4TE##*autom4te}"

export AUTOM4TE="autom4te${AC_VERSION_SFX}"
export AUTOCONF="autoconf${AC_VERSION_SFX}"

echo "..aclocal${AC_VERSION_SFX:-  [default aclocal version]} setup"
( p=$(command -v aclocal); set -x; $p --install $includes; ) || die "aclocal failed"

echo "...aclocal patches"
# See http://bugzilla.gnome.org/show_bug.cgi?id=418778
#
# The Glib developers are a bit over-eager in their version requirements, requiring
# an unnecessarily high verison of pkg-config at configure time, when they really
# only need it at autogen time.  This patch resets the version number in the file
# just generated by aclocal to the version we've been requiring all along.
sed -e  \
     's/PKG_PROG_PKG_CONFIG(\[0\.16\])/PKG_PROG_PKG_CONFIG([0.7])/g' \
     aclocal.m4 > aclocal.m4~ && mv aclocal.m4~ aclocal.m4

echo "..autoconf with version $AC_VERSION_SFX"
( p=$(command -v autoconf${AC_VERSION_SFX}); set -x; $p; ) || die "autoconf${AC_VERSION_SFX:-  [default autoconf version]} failed"
echo "..autoheader with version $AC_VERSION_SFX"
( p=$(command -v autoheader${AC_VERSION_SFX}); set -x; $p; ) || die "autoheader${AC_VERSION_SFX:-  [default autoheader version]} failed"
touch config/config.h.in

echo "..automake"
( p=$(command -v automake); set -x; $p --add-missing --force --copy --warnings=none; ) || die "automake failed"

echo "autogen has completed"
